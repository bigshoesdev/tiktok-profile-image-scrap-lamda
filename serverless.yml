# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service

service: tiktok-profile-image-uploader
frameworkVersion: "2"

custom:
  bucket: tiktok-profile-image-bucket
  serverless-offline:
    host: "0.0.0.0"

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs12.x
  stackName: TiktokProfileImageUploader
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            - "arn:aws:s3:::${self:custom.bucket}/*"
        - Effect: "Allow"
          Action:
            - "s3:PutObjectAcl"
          Resource:
            - "arn:aws:s3:::${self:custom.bucket}/*"

# The `functions` block defines what code to deploy
functions:
  UploadImage:
    handler: uploader.handler
    events:
      - http:
          path: upload
          method: get
          cors: true
    environment:
      Bucket: ${self:custom.bucket}
    layers:
      - arn:aws:lambda:us-east-1:305826424103:layer:node12_canvas-lib64-layer:1
      - arn:aws:lambda:us-east-1:305826424103:layer:node12_canvas_layer:2

  Post:
    handler: post.handler
    events:
      - http:
          path: post
          method: get
          cors: true
    layers:
      - arn:aws:lambda:us-east-1:305826424103:layer:node12_canvas-lib64-layer:1
      - arn:aws:lambda:us-east-1:305826424103:layer:node12_canvas_layer:2

resources:
  Resources:
    StorageBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:custom.bucket}

plugins:
  - serverless-offline
